/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { AddressComponent } from './address-component';
// May contain unused imports in some cases
// @ts-ignore
import type { Geometry } from './geometry';
// May contain unused imports in some cases
// @ts-ignore
import type { PlusCode } from './plus-code';

/**
 * 
 * @export
 * @interface GeocodingResult
 */
export interface GeocodingResult {
    /**
     * 
     * @type {Array<AddressComponent>}
     * @memberof GeocodingResult
     */
    'addressComponents'?: Array<AddressComponent>;
    /**
     * 
     * @type {string}
     * @memberof GeocodingResult
     */
    'formattedAddress'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof GeocodingResult
     */
    'postcodeLocalities'?: Array<string>;
    /**
     * 
     * @type {Geometry}
     * @memberof GeocodingResult
     */
    'geometry'?: Geometry;
    /**
     * 
     * @type {Array<string>}
     * @memberof GeocodingResult
     */
    'types'?: Array<GeocodingResultTypesEnum>;
    /**
     * 
     * @type {boolean}
     * @memberof GeocodingResult
     */
    'partialMatch'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof GeocodingResult
     */
    'placeId'?: string;
    /**
     * 
     * @type {PlusCode}
     * @memberof GeocodingResult
     */
    'plusCode'?: PlusCode;
}

export const GeocodingResultTypesEnum = {
    StreetAddress: 'street_address',
    StreetNumber: 'street_number',
    Floor: 'floor',
    Room: 'room',
    PostBox: 'post_box',
    Route: 'route',
    Intersection: 'intersection',
    Continent: 'continent',
    Political: 'political',
    Country: 'country',
    AdministrativeAreaLevel1: 'administrative_area_level_1',
    AdministrativeAreaLevel2: 'administrative_area_level_2',
    AdministrativeAreaLevel3: 'administrative_area_level_3',
    AdministrativeAreaLevel4: 'administrative_area_level_4',
    AdministrativeAreaLevel5: 'administrative_area_level_5',
    ColloquialArea: 'colloquial_area',
    Locality: 'locality',
    Ward: 'ward',
    Sublocality: 'sublocality',
    SublocalityLevel1: 'sublocality_level_1',
    SublocalityLevel2: 'sublocality_level_2',
    SublocalityLevel3: 'sublocality_level_3',
    SublocalityLevel4: 'sublocality_level_4',
    SublocalityLevel5: 'sublocality_level_5',
    Neighborhood: 'neighborhood',
    Premise: 'premise',
    Subpremise: 'subpremise',
    PostalCode: 'postal_code',
    PostalCodePrefix: 'postal_code_prefix',
    PostalCodeSuffix: 'postal_code_suffix',
    PlusCode: 'plus_code',
    NaturalFeature: 'natural_feature',
    Airport: 'airport',
    University: 'university',
    Park: 'park',
    Museum: 'museum',
    PointOfInterest: 'point_of_interest',
    Establishment: 'establishment',
    BusStation: 'bus_station',
    TrainStation: 'train_station',
    SubwayStation: 'subway_station',
    TransitStation: 'transit_station',
    LightRailStation: 'light_rail_station',
    Church: 'church',
    PrimarySchool: 'primary_school',
    SecondarySchool: 'secondary_school',
    Finance: 'finance',
    PostOffice: 'post_office',
    PlaceOfWorship: 'place_of_worship',
    PostalTown: 'postal_town',
    Synagogue: 'synagogue',
    Food: 'food',
    GroceryOrSupermarket: 'grocery_or_supermarket',
    Store: 'store',
    Drugstore: 'drugstore',
    Lawyer: 'lawyer',
    Health: 'health',
    InsuranceAgency: 'insurance_agency',
    GasStation: 'gas_station',
    CarDealer: 'car_dealer',
    CarRepair: 'car_repair',
    MealTakeaway: 'meal_takeaway',
    FurnitureStore: 'furniture_store',
    HomeGoodsStore: 'home_goods_store',
    ShoppingMall: 'shopping_mall',
    Gym: 'gym',
    Accounting: 'accounting',
    MovingCompany: 'moving_company',
    Lodging: 'lodging',
    Storage: 'storage',
    Casino: 'casino',
    Parking: 'parking',
    Stadium: 'stadium',
    TravelAgency: 'travel_agency',
    NightClub: 'night_club',
    BeautySalon: 'beauty_salon',
    HairCare: 'hair_care',
    Spa: 'spa',
    ShoeStore: 'shoe_store',
    Bakery: 'bakery',
    Pharmacy: 'pharmacy',
    School: 'school',
    BookStore: 'book_store',
    DepartmentStore: 'department_store',
    Restaurant: 'restaurant',
    RealEstateAgency: 'real_estate_agency',
    Bar: 'bar',
    Doctor: 'doctor',
    Hospital: 'hospital',
    FireStation: 'fire_station',
    Supermarket: 'supermarket',
    CityHall: 'city_hall',
    LocalGovernmentOffice: 'local_government_office',
    Atm: 'atm',
    Bank: 'bank',
    Library: 'library',
    CarWash: 'car_wash',
    HardwareStore: 'hardware_store',
    AmusementPark: 'amusement_park',
    Aquarium: 'aquarium',
    ArtGallery: 'art_gallery',
    BicycleStore: 'bicycle_store',
    BowlingAlley: 'bowling_alley',
    Cafe: 'cafe',
    Campground: 'campground',
    CarRental: 'car_rental',
    Cemetery: 'cemetery',
    ClothingStore: 'clothing_store',
    ConvenienceStore: 'convenience_store',
    Courthouse: 'courthouse',
    Dentist: 'dentist',
    Electrician: 'electrician',
    ElectronicsStore: 'electronics_store',
    Embassy: 'embassy',
    Florist: 'florist',
    FuneralHome: 'funeral_home',
    GeneralContractor: 'general_contractor',
    HinduTemple: 'hindu_temple',
    JewelryStore: 'jewelry_store',
    Laundry: 'laundry',
    LiquorStore: 'liquor_store',
    Locksmith: 'locksmith',
    MealDelivery: 'meal_delivery',
    Mosque: 'mosque',
    MovieRental: 'movie_rental',
    MovieTheater: 'movie_theater',
    Painter: 'painter',
    PetStore: 'pet_store',
    Physiotherapist: 'physiotherapist',
    Plumber: 'plumber',
    Police: 'police',
    RoofingContractor: 'roofing_contractor',
    RvPark: 'rv_park',
    TaxiStand: 'taxi_stand',
    VeterinaryCare: 'veterinary_care',
    Zoo: 'zoo',
    Archipelago: 'archipelago',
    TouristAttraction: 'tourist_attraction',
    TownSquare: 'town_square',
    Unknown: 'unknown'
} as const;

export type GeocodingResultTypesEnum = typeof GeocodingResultTypesEnum[keyof typeof GeocodingResultTypesEnum];


